#!/bin/bash

# define firewall services to be able to manage ports in web UI
postaldns=`config getprop postal-dns TCPPort`
if [[ $postaldns = '' ]]; then postaldns=53; fi
config set postal-dns service TCPPort $postaldns status enabled access red

postalsmtp=`config getprop postal-smtp TCPPort`
if [[ $postalsmtp = '' ]]; then postalsmtp=2525; fi
config set postal-smtp service TCPPort $postalsmtp status enabled access green,red

postalmariadb=`config getprop postal-mariadb TCPPort`
if [[ $postalmariadb = '' ]]; then postalmariadb=3307; fi
config set postal-mariadb service TCPPort $postalmariadb status enabled access localhost

postalrabbitmq=`config getprop postal-rabbitmq TCPPort`
if [[ $postalrabbitmq = '' ]]; then postalrabbitmq=5673; fi
config set postal-rabbitmq service TCPPort $postalrabbitmq status enabled access localhost

# dirty hack to be able to access docker containers like postal-mariadb
signal-event firewall-adjust

# docker compose
curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
chmod +x /usr/local/bin/docker-compose
ln -s /usr/local/bin/docker-compose /usr/bin/docker-compose

# get installation
git clone https://postalserver.io/start/install /opt/postal/install
ln -s /opt/postal/install/bin/postal /usr/bin/postal

#head /dev/urandom | tr -dc A-Za-z0-9 | head -c10 >> ~/pass.txt
password=`perl -e "use NethServer::Password; print NethServer::Password::store('postal');"`

# Create dirs for volumes
mkdir -p /opt/postal/mariadb
mkdir -p /opt/postal/rabbitmq

# Run rabbitmq container
docker run -d \
   --name postal-rabbitmq \
   -v /opt/postal/rabbitmq:/var/lib/rabbitmq \
   -p 127.0.0.1:`config getprop postal-rabbitmq TCPPort`:5672 \
   --restart always \
   -e RABBITMQ_DEFAULT_USER=postal \
   -e RABBITMQ_DEFAULT_PASS=$password \
   -e RABBITMQ_DEFAULT_VHOST=postal \
   rabbitmq:3.8

# Run mariadb container
docker run -d \
   --name postal-mariadb \
   -v /opt/postal/mariadb:/var/lib/mysql \
   -p 127.0.0.1:`config getprop postal-mariadb TCPPort`:3306 \
   --restart always \
   -e MARIADB_DATABASE=postal \
   -e MARIADB_ROOT_PASSWORD=$password \
   mariadb

#Use custom virtualhost name or Nethserver domain name
domain=`config getprop postal VirtualHost`
if [[ $domain = '' ]]; then domain=`config get DomainName`; fi

# Bootstrap Postal - maybe only do it once?
postal bootstrap postal.$domain

# Expand template before initialize
expand-template /opt/postal/config/postal.yml

# Initialize postal - on error initialize again
postal initialize
